<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Happy Birthday!</title>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;700&family=Playfair+Display:wght@700&display=swap" rel="stylesheet">
    <style>
        /* ---------------------------------- */
        /* --- GLOBAL STYLES & DESIGN SYSTEM --- */
        /* ---------------------------------- */
        :root {
            --primary-dark: #0d0d1a;
            --secondary-dark: #1a1a2e;
            --primary-light: #e0e0e0;
            --accent-gold: #ffc400;
            --accent-glow: rgba(255, 196, 0, 0.7);
            --font-primary: 'Poppins', sans-serif;
            --font-display: 'Playfair Display', serif;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        html {
            scroll-behavior: smooth;
        }

        body {
            background-color: var(--primary-dark);
            color: var(--primary-light);
            font-family: var(--font-primary);
            overflow-x: hidden;
            cursor: none; /* Hide the default cursor */
        }

        /* Custom Scrollbar */
        body::-webkit-scrollbar {
            width: 8px;
        }
        body::-webkit-scrollbar-track {
            background: var(--secondary-dark);
        }
        body::-webkit-scrollbar-thumb {
            background-color: var(--accent-gold);
            border-radius: 10px;
        }

        /* ---------------------------------- */
        /* --- INTERACTIVE ELEMENTS --- */
        /* ---------------------------------- */

        /* Particle Background */
        #particle-canvas {
            position: fixed;
            top: 0;
            left: 0;
            width: 100vw;
            height: 100vh;
            z-index: 1;
        }

        /* Custom Cursor */
        .cursor-dot, .cursor-outline {
            pointer-events: none;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            border-radius: 50%;
            z-index: 9999;
            opacity: 0;
            transition: opacity 0.3s ease-in-out, transform 0.2s ease-in-out;
        }
        .cursor-dot {
            width: 8px;
            height: 8px;
            background-color: var(--accent-gold);
        }
        .cursor-outline {
            width: 40px;
            height: 40px;
            border: 2px solid var(--accent-gold);
            transition-duration: 0.1s; /* Faster follow */
        }
        .cursor-interact {
            transform: translate(-50%, -50%) scale(1.5);
        }
        body:hover .cursor-dot, body:hover .cursor-outline {
            opacity: 1;
        }

        /* ---------------------------------- */
        /* --- JOURNEY STRUCTURE & SECTIONS --- */
        /* ---------------------------------- */
        main {
            position: relative;
            z-index: 2;
        }

        .journey-section {
            min-height: 100vh;
            width: 100vw;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            text-align: center;
            padding: 2rem;
            position: relative;
        }

        /* ---------------------------------- */
        /* --- TYPOGRAPHY & CONTENT STYLES --- */
        /* ---------------------------------- */
        .main-title h1 {
            font-family: var(--font-display);
            font-size: clamp(3rem, 12vw, 8rem);
            line-height: 1.1;
            font-weight: 700;
            background: linear-gradient(45deg, var(--accent-gold), #ffdd57, var(--primary-light));
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            margin-bottom: 1rem;
        }

        .main-title p {
            font-size: clamp(1rem, 4vw, 1.5rem);
            color: var(--primary-light);
            letter-spacing: 2px;
        }

        .scroll-indicator {
            position: absolute;
            bottom: 30px;
            left: 50%;
            transform: translateX(-50%);
            color: var(--primary-light);
            font-size: 0.8rem;
            letter-spacing: 1px;
            animation: bounce 2s infinite;
        }
        .scroll-indicator::after {
            content: 'â†“';
            display: block;
            font-size: 1.5rem;
            margin-top: 5px;
        }

        .message-section p {
            font-size: clamp(1.2rem, 3vw, 2rem);
            max-width: 800px;
            line-height: 1.8;
            font-weight: 300;
        }

        .highlight {
            color: var(--accent-gold);
            font-weight: 400;
        }

        .gallery-section h2 {
            font-family: var(--font-display);
            font-size: clamp(2rem, 8vw, 4rem);
            margin-bottom: 3rem;
        }
        
        .photo-gallery {
            display: flex;
            flex-wrap: wrap;
            justify-content: center;
            gap: 2rem;
            max-width: 1200px;
        }
        
        .photo-card {
            width: 300px;
            height: 400px;
            border-radius: 15px;
            overflow: hidden;
            position: relative;
            background: var(--secondary-dark);
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
            transition: transform 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275), box-shadow 0.4s;
            /* Glassmorphism background */
            background: rgba(26, 26, 46, 0.6);
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.1);
        }
        .photo-card:hover {
            transform: translateY(-15px) scale(1.03);
            box-shadow: 0 20px 40px rgba(0,0,0,0.5), 0 0 20px var(--accent-glow);
        }
        .photo-card img {
            width: 100%;
            height: 100%;
            object-fit: cover;
            transition: transform 0.4s ease;
        }
        .photo-card:hover img {
            transform: scale(1.1);
        }

        .wish-section h1 {
            font-family: var(--font-display);
            font-size: clamp(3rem, 10vw, 7rem);
            text-shadow: 0 0 10px var(--accent-glow), 0 0 20px var(--accent-glow);
        }

        .final-section .button {
            display: inline-block;
            text-decoration: none;
            color: var(--primary-dark);
            background-color: var(--accent-gold);
            padding: 1rem 2.5rem;
            border-radius: 50px;
            font-weight: 700;
            margin-top: 2rem;
            transition: transform 0.3s, box-shadow 0.3s;
            box-shadow: 0 5px 15px rgba(255,196,0,0.3);
        }
        .final-section .button:hover {
            transform: scale(1.1);
            box-shadow: 0 10px 25px rgba(255,196,0,0.5);
        }


        /* ---------------------------------- */
        /* --- ANIMATIONS --- */
        /* ---------------------------------- */
        @keyframes bounce {
            0%, 20%, 50%, 80%, 100% {
                transform: translateX(-50%) translateY(0);
            }
            40% {
                transform: translateX(-50%) translateY(-20px);
            }
            60% {
                transform: translateX(-50%) translateY(-10px);
            }
        }
        
        /* Reveal animation for elements on scroll */
        .reveal {
            opacity: 0;
            transform: translateY(50px);
            transition: opacity 1.2s cubic-bezier(0.165, 0.84, 0.44, 1), transform 1.2s cubic-bezier(0.165, 0.84, 0.44, 1);
        }
        .reveal.visible {
            opacity: 1;
            transform: translateY(0);
        }

    </style>
</head>
<body>

    <!-- Interactive Background Canvas -->
    <canvas id="particle-canvas"></canvas>

    <!-- Custom Cursor Elements -->
    <div class="cursor-dot"></div>
    <div class="cursor-outline"></div>

    <main id="journey-container">
        <!-- =================================================================== -->
        <!-- SECTION 1: HERO / OPENING                                           -->
        <!-- =================================================================== -->
        <section class="journey-section">
            <div class="main-title reveal">
                <!-- EDIT THIS: Change the name -->
                <h1>Happy Birthday, <br>Sarah</h1>
                <p>A journey for someone special</p>
            </div>
            <div class="scroll-indicator">Scroll to begin</div>
        </section>

        <!-- =================================================================== -->
        <!-- SECTION 2: HEARTFELT MESSAGE 1                                      -->
        <!-- =================================================================== -->
        <section class="journey-section">
            <div class="message-section">
                <!-- EDIT THIS: Customize the message -->
                <p class="reveal">
                    Another year, another adventure. It feels like just yesterday we were [mention a shared memory]. 
                    Watching you grow and chase your dreams has been nothing short of <span class="highlight">inspiring</span>.
                </p>
            </div>
        </section>

        <!-- =================================================================== -->
        <!-- SECTION 3: PHOTO GALLERY                                            -->
        <!-- =================================================================== -->
        <section class="journey-section">
            <div class="gallery-section">
                <h2 class="reveal">A few of my favorite moments...</h2>
                <div class="photo-gallery">
                    <!-- EDIT THIS: Replace image URLs. Use square or vertical photos for best results. -->
                    <div class="photo-card reveal" style="transition-delay: 0.1s;">
                        <img src="https://images.unsplash.com/photo-1517841905240-472988babdf9?q=80&w=300" alt="Memory 1">
                    </div>
                    <div class="photo-card reveal" style="transition-delay: 0.3s;">
                        <img src="https://images.unsplash.com/photo-1534528741775-53994a69daeb?q=80&w=300" alt="Memory 2">
                    </div>
                    <div class="photo-card reveal" style="transition-delay: 0.5s;">
                        <img src="https://images.unsplash.com/photo-1524504388940-b1c1722653e1?q=80&w=300" alt="Memory 3">
                    </div>
                </div>
            </div>
        </section>
        
        <!-- =================================================================== -->
        <!-- SECTION 4: HEARTFELT MESSAGE 2                                      -->
        <!-- =================================================================== -->
        <section class="journey-section">
            <div class="message-section">
                 <!-- EDIT THIS: Customize the message -->
                <p class="reveal">
                    You bring so much <span class="highlight">light</span> and <span class="highlight">laughter</span> into every room you enter. 
                    The world is genuinely a better place with you in it. Never forget that.
                </p>
            </div>
        </section>

        <!-- =================================================================== -->
        <!-- SECTION 5: THE BIG WISH                                             -->
        <!-- =================================================================== -->
        <section class="journey-section">
            <div class="wish-section">
                 <!-- EDIT THIS: Customize the wish -->
                <h1 class="reveal">
                    Here's to a year <br> that's as amazing <br> as you are.
                </h1>
            </div>
        </section>

        <!-- =================================================================== -->
        <!-- SECTION 6: FINAL MESSAGE & CTA                                      -->
        <!-- =================================================================== -->
        <section class="journey-section final-section">
            <div class="message-section">
                <p class="reveal">I hope your day is filled with everything you wished for.</p>
                <!-- EDIT THIS: Customize the button text and link if needed -->
                <a href="#" class="button reveal" style="transition-delay: 0.3s;">Let the celebration begin!</a>
            </div>
        </section>

    </main>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            
            // ----------------------------------
            // --- PARTICLE BACKGROUND SCRIPT ---
            // ----------------------------------
            const canvas = document.getElementById('particle-canvas');
            const ctx = canvas.getContext('2d');
            canvas.width = window.innerWidth;
            canvas.height = window.innerHeight;

            let particlesArray;

            const particleConfig = {
                count: 80,
                speed: 0.5,
                color: 'rgba(255, 196, 0, 0.7)',
                size: { min: 0.5, max: 2.5 },
                connectionDistance: 120
            };

            class Particle {
                constructor() {
                    this.x = Math.random() * canvas.width;
                    this.y = Math.random() * canvas.height;
                    this.size = Math.random() * (particleConfig.size.max - particleConfig.size.min) + particleConfig.size.min;
                    this.speedX = (Math.random() * particleConfig.speed * 2) - particleConfig.speed;
                    this.speedY = (Math.random() * particleConfig.speed * 2) - particleConfig.speed;
                    this.color = particleConfig.color;
                }
                update() {
                    if (this.x > canvas.width || this.x < 0) this.speedX = -this.speedX;
                    if (this.y > canvas.height || this.y < 0) this.speedY = -this.speedY;
                    this.x += this.speedX;
                    this.y += this.speedY;
                }
                draw() {
                    ctx.fillStyle = this.color;
                    ctx.beginPath();
                    ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);
                    ctx.fill();
                }
            }

            function initParticles() {
                particlesArray = [];
                for (let i = 0; i < particleConfig.count; i++) {
                    particlesArray.push(new Particle());
                }
            }

            function connectParticles() {
                for (let a = 0; a < particlesArray.length; a++) {
                    for (let b = a; b < particlesArray.length; b++) {
                        let distance = Math.sqrt(
                            (particlesArray[a].x - particlesArray[b].x) * (particlesArray[a].x - particlesArray[b].x) +
                            (particlesArray[a].y - particlesArray[b].y) * (particlesArray[a].y - particlesArray[b].y)
                        );

                        if (distance < particleConfig.connectionDistance) {
                            let opacity = 1 - (distance / particleConfig.connectionDistance);
                            ctx.strokeStyle = `rgba(255, 196, 0, ${opacity})`;
                            ctx.lineWidth = 1;
                            ctx.beginPath();
                            ctx.moveTo(particlesArray[a].x, particlesArray[a].y);
                            ctx.lineTo(particlesArray[b].x, particlesArray[b].y);
                            ctx.stroke();
                        }
                    }
                }
            }

            function animateParticles() {
                ctx.clearRect(0, 0, canvas.width, canvas.height);
                for (let i = 0; i < particlesArray.length; i++) {
                    particlesArray[i].update();
                    particlesArray[i].draw();
                }
                connectParticles();
                requestAnimationFrame(animateParticles);
            }
            
            initParticles();
            animateParticles();

            window.addEventListener('resize', () => {
                canvas.width = window.innerWidth;
                canvas.height = window.innerHeight;
                initParticles();
            });

            // ----------------------------------
            // --- SCROLL REVEAL SCRIPT ---
            // ----------------------------------
            const revealElements = document.querySelectorAll('.reveal');
            
            const revealObserver = new IntersectionObserver((entries) => {
                entries.forEach(entry => {
                    if (entry.isIntersecting) {
                        entry.target.classList.add('visible');
                    }
                });
            }, { threshold: 0.1 });

            revealElements.forEach(el => {
                revealObserver.observe(el);
            });

            // ----------------------------------
            // --- CUSTOM CURSOR SCRIPT ---
            // ----------------------------------
            const cursorDot = document.querySelector('.cursor-dot');
            const cursorOutline = document.querySelector('.cursor-outline');
            const interactableElements = document.querySelectorAll('a, button, .photo-card');

            window.addEventListener('mousemove', (e) => {
                const posX = e.clientX;
                const posY = e.clientY;

                cursorDot.style.left = `${posX}px`;
                cursorDot.style.top = `${posY}px`;

                cursorOutline.animate({
                    left: `${posX}px`,
                    top: `${posY}px`
                }, { duration: 500, fill: "forwards" });
            });

            interactableElements.forEach(el => {
                el.addEventListener('mouseenter', () => {
                    cursorOutline.classList.add('cursor-interact');
                });
                el.addEventListener('mouseleave', () => {
                    cursorOutline.classList.remove('cursor-interact');
                });
            });

        });
    </script>

</body>
</html>
